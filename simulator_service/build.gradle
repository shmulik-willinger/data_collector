buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
		classpath('se.transmode.gradle:gradle-docker:1.2')

    }
}

group = 'springio'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.4.2.RELEASE'
    compile group: 'org.snmp4j', name: 'snmp4j', version: '2.5.5'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'io.prometheus', name: 'simpleclient', version: '0.3.0'
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.3.0'
    compile group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.3.0'
    compile group: 'io.prometheus', name: 'simpleclient_pushgateway', version: '0.3.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.4.2.RELEASE'
    //Elastic search
    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.2.3'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '6.2.3'
    compile group: 'org.snmp4j', name: 'snmp4j-agent', version: '2.6.3'
    //Lombok
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    //bridge logging from JCL to SLF4j
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.21'

// vert.x dependencies
	compile "io.vertx:vertx-core:3.2.1"
	compile "io.vertx:vertx-web:3.2.1"
	compile "io.vertx:vertx-dropwizard-metrics:3.2.1"

// Improve performance - recommanded by Vert.x
	compile group: 'javassist', name: 'javassist', version: '3.12.1.GA'

    //compile group: 'radle.plugin.com.palantir.gradle.docker', name: 'gradle-docker', version: '0.13.0'

}
mainClassName = 'configuration.MicroServiceMain'
task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

jar {
		manifest.attributes provider: 'gradle'
        //manifest.attributes 'Main-Class': 'configuration.MicroServiceMain'
		}

